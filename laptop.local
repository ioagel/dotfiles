#!/bin/sh

brew bundle --file=- <<EOF
tap "homebrew/cask-fonts"
tap "AdoptOpenJDK/openjdk"
brew "fasd"
brew "pygments"
brew "shellcheck"
brew "jq"
brew "tree"
brew "diff-so-fancy"
brew "ripgrep"
brew "mosh"
brew "git-lfs"
brew "chrome-cli"
brew "bat"
cask "adoptopenjdk8"
brew "maven"
cask "font-fira-code"
EOF

install_asdf_python() {
  python2_version="$(asdf list-all python| grep -v "[a-z3]" | tail -1)"
  python3_version="$(asdf list-all python| grep -v "[a-z]" | tail -1)"

  for version in $python2_version $python3_version; do
    if ! asdf list python | grep -Fq "$version"; then
      asdf install python "$version"
    fi
  done
  # keep mac os x usage of python 2 as default
  asdf global python "$python2_version" "$python3_version"
}

pip_install_or_update() {
  local package="$1"
  local python_version="${2:-3}"
  if [ "$python_version" -eq 2 ]; then
    pip_version=pip2
  else
    pip_version=pip3
  fi
  if "$pip_version" list --user 2> /dev/null | grep -q "^$package"; then
    "$pip_version" install -U --user "$package" >/dev/null 2>&1
    echo "$pip_version: $package updated!"
  else
    "$pip_version" install --user "$package" >/dev/null 2>&1
    echo "$pip_version: $package installed!"
  fi
}

yarn_install_or_update() {
  local package="$1"
  if yarn global list | grep -q "$package"; then
    yarn global upgrade "$package"
    echo "$package updated!"
  else
    yarn global add "$package"
    echo "$package installed!"
  fi
}

# install oh-my-zsh and spaceship prompt
OH_ZSH="$HOME/.oh-my-zsh"
if [ ! -d "$OH_ZSH" ]; then
  fancy_echo "Installing oh-my-zsh and spaceship prompt ..."
  git clone https://github.com/robbyrussell/oh-my-zsh.git "$OH_ZSH"
  git clone https://github.com/denysdovhan/spaceship-prompt.git \
    "$OH_ZSH/custom/themes/spaceship-prompt"
  ln -s "$OH_ZSH/custom/themes/spaceship-prompt/spaceship.zsh-theme" \
    "$OH_ZSH/custom/themes/spaceship.zsh-theme"
  # install zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  # install zsh-history-substring-search
  git clone https://github.com/zsh-users/zsh-history-substring-search ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
  # install zsh-completions
  git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions
fi

# install ruby gems
fancy_echo "Installing/Updating ruby gems ..."
gem_install_or_update rubocop
gem_install_or_update standard
gem_install_or_update neovim

# asdf python 2 and 3 setup
fancy_echo "Installing latest Python 2 and 3..."
add_or_update_asdf_plugin "python" "https://github.com/danhper/asdf-python.git"
install_asdf_python
# install python 2 and 3 packages
fancy_echo "Installing latest pip modules ..."
pip_install_or_update pynvim
pip_install_or_update pynvim 2

# install node packages
fancy_echo "Installing latest npm packages ..."
yarn_install_or_update neovim

# iTerm2, vim, tmux support for italics
fancy_echo "Installing italics-capable terminfo files for iTerm2, vim, tmux..."
if [ ! -r ~/.terminfo/78/xterm-256color-italic ]; then
  tic -x ~/dotfiles/iterm2/xterm-256color-italic.terminfo
fi
if [ ! -r ~/.terminfo/74/tmux-256color ]; then
  tic -x ~/dotfiles/iterm2/tmux-256color.terminfo
fi

if [ -r "$HOME/.rcrc" ]; then
  fancy_echo "Updating dotfiles ..."
  rcup
fi
