#!/usr/bin/env bash
# shellcheck disable=SC1090
# Generates the Zellij config.kdl file from a template,
# replacing the theme placeholder with the specified theme name.

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Exit if unset variable is used

# Useful functions
source ~/.local/lib/utils.sh
source ~/.local/lib/extract.sh

THEME_DIR="$HOME/.config/themes"
THEME_VARS_FILE="$THEME_DIR/active-theme.sh"

# If the theme variables are not loaded, we are starting fresh
if [ -z "${THEME_MODE:-}" ]; then
    # Load the theme variables from the active theme file
    [ -f "$THEME_VARS_FILE" ] || error "Theme file not found: $THEME_VARS_FILE"
    raw_line=$(grep -m 1 'THEME_NAME=' "$THEME_VARS_FILE")
    THEME_NAME=$(get_raw_variable_value "$raw_line")
    raw_line=$(grep -m 1 'THEME_DISPLAY_NAME=' "$THEME_VARS_FILE")
    THEME_DISPLAY_NAME=$(get_raw_variable_value "$raw_line")
fi

ARG_THEME=""           # Default: empty, so the active theme is used or any sourced theme
SEND_NOTIFICATION=true # Default: send notification

ZELLIJ_CONFIG_DIR="$HOME/.config/zellij"
TEMPLATE_FILE="$ZELLIJ_CONFIG_DIR/config.kdl.template"
CONFIG_FILE="$ZELLIJ_CONFIG_DIR/config.kdl"

# --- Usage Function ---
usage() {
    local script_name
    script_name=$(basename "$0")
    echo "Usage: $script_name [-t|--theme <theme_name>] [-q|--quiet] [-h|--help]" >&2
    echo "  Builds the Zellij config with the specified theme." >&2
    echo "  Options:" >&2
    echo "    -t, --theme <theme_name>  Specify the initial theme to activate (default: ${THEME_DISPLAY_NAME})." >&2
    echo "    -q, --quiet               Suppress the final notification message." >&2
    echo "    -h, --help                Show this help message." >&2
    exit 1
}

# --- Argument Parsing ---
# Manual loop to handle both -t and --theme
while [ $# -gt 0 ]; do
    case "$1" in
    -t | --theme)
        if [[ -n "$2" && "$2" != -* ]]; then
            ARG_THEME="$2"
            shift # past argument
            shift # past value
        else
            echo "Error: Option '$1' requires an argument." >&2
            usage
        fi
        ;;
    -q | --quiet)
        SEND_NOTIFICATION=false
        shift # past argument
        ;;
    -h | --help)
        usage
        ;;
    --) # End of options
        shift
        break
        ;;
    -*)
        echo "Error: Unknown option '$1'" >&2
        usage
        ;;
    *)
        echo "Error: Unexpected argument '$1'" >&2
        usage
        ;;
    esac
done

# Determine the effective theme ID
effective_theme_id=""
if [ -n "$ARG_THEME" ]; then
    effective_theme_id="$ARG_THEME"
elif [ -n "$THEME_NAME" ]; then # THEME_NAME from initial load or inherited
    effective_theme_id="$THEME_NAME"
else
    # This case should ideally be prevented if the initial load of THEME_NAME fails
    # and no -t is provided. The check for current_theme_sh_file will catch it too.
    error "Theme identifier could not be determined."
fi

# Path to the theme's shell variable file
current_theme_sh_file="$THEME_DIR/$effective_theme_id/theme.sh"

if [ ! -f "$current_theme_sh_file" ]; then
    error "Theme shell variable file not found: $current_theme_sh_file
    This file should define THEME_NAME, THEME_DISPLAY_NAME, etc.
    Please ensure the theme '$effective_theme_id' exists in $THEME_DIR/."
fi

log "Sourcing theme shell variables from $current_theme_sh_file..."
source "$current_theme_sh_file" # Updates THEME_NAME, THEME_DISPLAY_NAME, THEME_MODE

# Dependency Checks
check_command "notify-send" "Please install: libnotify"

# Check if template file exists
if [ ! -f "$TEMPLATE_FILE" ]; then
    error "Zellij config template file not found: $TEMPLATE_FILE
    This file is required to generate the Zellij config.
    Please ensure it exists in $ZELLIJ_CONFIG_DIR/."
fi

# --- Build Config ---
# Use effective_theme_id for the placeholder, and THEME_DISPLAY_NAME for logs/notifications
log "Building Zellij config '$CONFIG_FILE' with theme: ${THEME_DISPLAY_NAME} (${effective_theme_id})..."

# shellcheck disable=SC2016
vars_to_substitute='$ZELLIJ_THEME'

generate_config_file \
    "$vars_to_substitute" \
    "$TEMPLATE_FILE" \
    "$CONFIG_FILE" \
    "//" \
    "$(basename "$0")"

# Send notification
if [[ "$SEND_NOTIFICATION" = true ]]; then
    log "Sending notification..."
    # Use the sourced THEME_DISPLAY_NAME for the notification
    notify-send "Zellij Theme Applied" "Switched to '${THEME_DISPLAY_NAME}' theme."
fi
