#!/usr/bin/env bash
# NOTE: hitting the GitHub api without an auth token limits the requests
# at 60/hour.

sudo apt -y update

sudo apt -y install software-properties-common \
  python3-pip tmux rcm zsh htop shellcheck jq tree wget curl git silversearcher-ag \
  unzip fzf fasd ripgrep bat apt-transport-https ca-certificates gnupg lsb-release

# fix bat installation in Ubuntu/PopOS
ln -sf /usr/bin/batcat ~/.local/bin/bat

# install sops - Secrets OPerationS
sops_latest="$(latest_release_from_github 'mozilla/sops' no)"
echo "Installing sops encruption package..."
wget --quiet --continue --show-progress \
  https://github.com/mozilla/sops/releases/download/v"$sops_latest"/sops_"$sops_latest"_amd64.deb \
  -O /tmp/sops.deb
sudo dpkg -i /tmp/sops.deb


# install neovim latest from appimage
nvim_latest="$(latest_release_from_github 'neovim/neovim')"
echo "Installing/Upgrading neovim ..."
wget --quiet --continue --show-progress \
  https://github.com/neovim/neovim/releases/download/"$nvim_latest"/nvim.appimage \
  -O ~/.local/bin/nvim
chmod +x ~/.local/bin/nvim

# install docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose
sudo usermod -aG docker "$USER"

# install lazydocker: A simple terminal UI for both docker and docker-compose
lzd_latest="$(latest_release_from_github 'jesseduffield/lazydocker' no)"
echo "Installing/Upgrading lazydocker ..."
wget --quiet --continue --show-progress -P /tmp https://github.com/jesseduffield/lazydocker/releases/latest/download/lazydocker_"$lzd_latest"_Linux_x86_64.tar.gz
tar --overwrite -C ~/.local/bin -xzf /tmp/lazydocker_"$lzd_latest"_Linux_x86_64.tar.gz lazydocker
rm -f /tmp/lazydocker_"$lzd_latest"_Linux_x86_64.tar.gz

# Install lazygit
lzg_latest="$(latest_release_from_github 'jesseduffield/lazygit' no)"
wget --quiet --continue --show-progress -P /tmp \
  https://github.com/jesseduffield/lazygit/releases/download/v"$lzg_latest"/lazygit_"$lzg_latest"_Linux_x86_64.tar.gz
tar --overwrite -C ~/.local/bin -xzf /tmp/lazygit_"$lzg_latest"_Linux_x86_64.tar.gz lazygit

# install Kubernetes tools
# kubectl
# Download the Google Cloud public signing key:
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get -y update
sudo apt-get install -y kubectl
git clone https://github.com/ahmetb/kubectx /tmp/kubectx
cp -f /tmp/kubectx/kube* ~/.local/bin/
rm -rf /tmp/kubectx

# Install k9s
echo "Installing/Upgrading k9s ..."
wget --quiet --continue --show-progress -P /tmp \
  https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_x86_64.tar.gz
tar -C /tmp -xzf /tmp/k9s_Linux_x86_64.tar.gz
mv -f /tmp/k9s ~/.local/bin/

# Install Kind
curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
chmod +x ./kind
mv ./kind ~/.local/bin/

# Install gui apps and fonts
if [ "$WITH_GUI" = 'yes' ]; then
  mkdir -p ~/.local/share/fonts

  sudo apt -y install fonts-firacode alacritty xclip

  # nerd fonts
  wget -P /tmp https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
  wget -P /tmp https://github.com/ryanoasis/nerd-fonts/releases/latest/download/SourceCodePro.zip
  unzip /tmp/FiraCode.zip -d /tmp/FiraCode && mv -f /tmp/FiraCode/* ~/.local/share/fonts
  unzip /tmp/SourceCodePro.zip -d /tmp/SourceCodePro && mv -f /tmp/SourceCodePro/* ~/.local/share/fonts
  fc-cache -fr
  rm -rf /tmp/FiraCode* /tmp/SourceCodePro*
fi

# check for env variable WITH_JAVA before installing java/maven support
if [ "$WITH_JAVA" = 'yes' ]; then
  sudo apt -y install maven
fi
