#!/usr/bin/env bash

WITH_GO="${WITH_GO:-yes}"
WITH_RUBY="${WITH_RUBY:-yes}"
WITH_JAVA="${WITH_JAVA:-yes}"
WITH_GUI="${WITH_GUI:-no}" # for Linux

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

OS="$(uname)"
if [[ "$OS" != 'Darwin' && ("$OS" != 'Linux' || "$(lsb_release -s -i)" != 'Ubuntu') ]]; then
  echo "This script supports only Mac and Ubuntu!"
  exit 1
fi

cwd="$(pwd)"
export cwd

. ./sh_functions

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi
if [ ! -d "$HOME/code/go" ]; then
  mkdir -p "$HOME/code/go"
fi
export GOPATH="$HOME/code/go"
export PATH="$HOME/.bin:$GOPATH/bin:$PATH"

# Authentication
sudo -v
# Keep-alive: update existing `sudo` time stamp until bootstrap has finished
while true; do
  sudo -n true
  sleep 60
  kill -0 "$$" || exit
done 2>/dev/null &

if [ "$OS" = 'Darwin' ]; then
  number_of_cores=$(sysctl -n hw.ncpu)
  . ./mac
else
  # we are definitely in Ubuntu from the check above
  number_of_cores=$(nproc)
  . ./ubuntu
fi

if [ ! -d "$HOME/.asdf" ]; then
  fancy_echo "########## Installing asdf version manager ##########"
  asdf_latest_version=$(latest_release_from_github asdf-vm/asdf)
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch "$asdf_latest_version"
fi

. "$HOME"/.asdf/asdf.sh

fancy_echo "########## Installing latest Node, yarn and various node packages ##########"
add_or_update_asdf_plugin nodejs https://github.com/asdf-vm/asdf-nodejs.git
bash "$HOME/.asdf/plugins/nodejs/bin/import-release-team-keyring"
install_latest_asdf_language nodejs lts
npm install -g yarn
asdf reshim nodejs
# install node packages
yarn_install_or_update neovim
if [ "$OS" = 'Linux' ]; then
  yarn_install_or_update diff-so-fancy
fi
asdf reshim nodejs

# asdf python 3 setup
fancy_echo "########## Installing latest Python 3 and pip modules ##########"
add_or_update_asdf_plugin python https://github.com/danhper/asdf-python.git
# shellcheck disable=SC2119
install_latest_asdf_language python
# install python 3 packages
pip_install_or_update pynvim
pip_install_or_update pygments
# https://github.com/toggle-corp/alacritty-colorscheme
pip_install_or_update alacritty-colorscheme
asdf reshim python

if [ "$WITH_RUBY" = 'yes' ]; then
  fancy_echo "########## Installing latest Ruby and gems ##########"
  add_or_update_asdf_plugin ruby https://github.com/asdf-vm/asdf-ruby.git
  install_latest_asdf_language ruby
  gem update --system
  bundle config --global jobs $((number_of_cores - 1))
  gem_install_or_update neovim
  asdf reshim ruby
fi

# Java 8 (zulu) setup
if [ "$WITH_JAVA" = 'yes' ]; then
  fancy_echo "########## Installing Zulu Java 8 ##########"
  add_or_update_asdf_plugin java https://github.com/halcyon/asdf-java.git
  # shellcheck disable=SC2119
  install_latest_asdf_language java "$(asdf list-all "java" | grep "zulu-8" | tail -1)"
  asdf reshim java
fi

# Golang Setup
if [ "$WITH_GO" = 'yes' ]; then
  fancy_echo "########## Installing latest GoLang ##########"
  add_or_update_asdf_plugin golang https://github.com/kennyp/asdf-golang.git
  mkdir -p "$HOME"/code/go/{bin,pkg,src}
  # shellcheck disable=SC2119
  install_latest_asdf_language golang
  asdf reshim golang
fi

# install oh-my-zsh and spaceship prompt
OH_ZSH="$HOME/.oh-my-zsh"
if [ ! -d "$OH_ZSH" ]; then
  fancy_echo "########## Installing oh-my-zsh and spaceship prompt ##########"
  git clone https://github.com/robbyrussell/oh-my-zsh.git "$OH_ZSH"
  git clone https://github.com/denysdovhan/spaceship-prompt.git \
    "$OH_ZSH/custom/themes/spaceship-prompt"
  ln -s "$OH_ZSH/custom/themes/spaceship-prompt/spaceship.zsh-theme" \
    "$OH_ZSH/custom/themes/spaceship.zsh-theme"
  # install zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$HOME"/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  # install zsh-history-substring-search
  git clone https://github.com/zsh-users/zsh-history-substring-search "$HOME"/.oh-my-zsh/custom/plugins/zsh-history-substring-search
  # install zsh-completions
  git clone https://github.com/zsh-users/zsh-completions "$HOME"/.oh-my-zsh/custom/plugins/zsh-completions
  # install zsh autosuggestions
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
fi

# TODO: do we need this?
#  Install Lemonade
# Lemonade is a remote utility tool. (copy, paste and open browser) over TCP.
#if ! command -v lemonade > /dev/null; then
#  go get -d github.com/lemonade-command/lemonade
#  cd "$GOPATH"/src/github.com/lemonade-command/lemonade/
#  make install
#  cd "$cwd"
#fi

# Alacritty, iTerm2, vim, tmux support for italics
fancy_echo "########## Installing italics-capable terminfo files for terminals, vim, tmux ##########"
if [ ! -r ~/.terminfo/61/alacritty ] || [ ! -r ~/.terminfo/a/alacritty ]; then
  alacritty_terminfo=$(mktemp)
  curl -o "$alacritty_terminfo" \
    https://raw.githubusercontent.com/jwilm/alacritty/master/extra/alacritty.info
  tic -xe alacritty,alacritty-direct "$alacritty_terminfo"
fi
if [ ! -r ~/.terminfo/78/xterm-256color-italic ] ||
  [ ! -r ~/.terminfo/x/xterm-256color-italic ]; then
  tic -x ~/dotfiles/iterm2/xterm-256color-italic.terminfo
fi
if [ ! -r ~/.terminfo/74/tmux-256color ] ||
  [ ! -r ~/.terminfo/t/tmux-256color ]; then
  tic -x ~/dotfiles/iterm2/tmux-256color.terminfo
fi

# Setup alacritty-colorscheme
REPO="https://github.com/aaron-williamson/base16-alacritty.git"
DEST="$HOME/.local/share/alacritty/base16-alacritty"
if [ ! -e "$HOME/.config/alacritty/colors" ]; then
  fancy_echo "########## Install base16 alacritty ##########"
  mkdir -p "$HOME/.config/alacritty"
  mkdir -p "$HOME/.local/share/alacritty"
  # Get colorschemes
  git clone $REPO "$DEST"
  # Create symlink at default colors location (optional)
  ln -s "$DEST/colors" "$HOME/.config/alacritty/colors"
  # EXAMPLE USAGE
  # bash/zsh aliases
  # Add this in your .zshrc or .bashrc file:
  #
  # LIGHT_COLOR='base16-gruvbox-light-soft.yml'
  # DARK_COLOR='base16-gruvbox-dark-soft.yml'
  #
  # alias day="alacritty-colorscheme -V apply $LIGHT_COLOR"
  # alias night="alacritty-colorscheme -V apply $DARK_COLOR"
  # alias toggle="alacritty-colorscheme -V toggle $LIGHT_COLOR $DARK_COLOR"
  #########
  fancy_echo "Setup base16 alacritty... DONE"
else
  fancy_echo "########## Updating base16 alacritty ##########"
  cd "$DEST" && git pull origin master
  cd "$cwd"
fi

# Set ZSH as default shell
fancy_echo "########## Setting ZSH as default shell ##########"
if [ "$OS" = 'Darwin' ]; then
  shell=$(dscl . -read ~/ UserShell | sed 's/UserShell: //')
  echo "$shell" | grep -qv '/usr/local/bin/zsh' && update_shell && echo "Mac set Homebrew ZSH default shell"
elif grep "$USER" </etc/passwd | grep -qv 'zsh'; then
  update_shell && echo "Ubuntu set ZSH default shell"
fi

if [ -r "$HOME/.rcrc" ]; then
  fancy_echo "########## Updating dotfiles ##########"
  rcup
else
  fancy_echo "########## Installing dotfiles ##########"
  rm -f "$HOME"/.zshrc
  env RCRC="$HOME"/dotfiles/rcrc rcup
  bat cache --build
fi

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "########## Running your customizations from ~/.laptop.local ##########"
  . "$HOME/.laptop.local"
fi
