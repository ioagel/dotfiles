#!/bin/bash

set -e # Exit immediately if a command exits with a non-zero status.
# set -u # Exit if unset variable is used (optional, but good practice)

# Check if a theme name was provided
if [ -z "$1" ]; then
    echo "Usage: $0 <theme_name>"
    echo "  Applies the specified theme to i3 config templates."
    exit 1
fi

THEME_NAME="$1"

# --- Configuration ---
# Assume dotfiles directory is in a fixed location
DOTFILES_DIR="$HOME/.dotfiles"

# Construct paths based on the fixed dotfiles location
THEME_DIR="$DOTFILES_DIR/config/i3/themes"
THEME_VARS_FILE="$THEME_DIR/${THEME_NAME}.vars"
CONFIG_TEMPLATE_DIR="$DOTFILES_DIR/config/i3"
CONFIG_OUTPUT_DIR="$DOTFILES_DIR/config/i3" # Output to .dotfiles repo
# --- End Configuration ---

# Check if the theme variables file exists
if [ ! -f "$THEME_VARS_FILE" ]; then
    echo "Error: Theme file not found: $THEME_VARS_FILE"
    exit 1
fi

# Source the theme variables into the current environment
# Run in a subshell to avoid polluting the caller's environment
(
    echo "Loading theme variables from $THEME_VARS_FILE..."
    # Filter out comments and empty lines before sourcing
    grep -vE '^\s*#|^\s*$' "$THEME_VARS_FILE" >/tmp/theme_vars_filtered.sh
    source /tmp/theme_vars_filtered.sh
    rm /tmp/theme_vars_filtered.sh # Clean up temporary file

    # Define template and output files
    declare -A TEMPLATE_MAP
    TEMPLATE_MAP=(
        ["$CONFIG_TEMPLATE_DIR/config.template"]="$CONFIG_OUTPUT_DIR/config"
        ["$CONFIG_TEMPLATE_DIR/config.d/monitor.conf.template"]="$CONFIG_OUTPUT_DIR/config.d/monitor.conf"
        ["$CONFIG_TEMPLATE_DIR/config.d/monitor2.conf.template"]="$CONFIG_OUTPUT_DIR/config.d/monitor2.conf"
        ["$CONFIG_TEMPLATE_DIR/config.d/monitor3.conf.template"]="$CONFIG_OUTPUT_DIR/config.d/monitor3.conf"
    )

    # Build the list of variables expected by envsubst
    # Reads keys like 'export FOO=..' -> extracts 'FOO' -> prepends '$'
    VAR_LIST=$(grep -oP '^export\s+\K[^=]+' "$THEME_VARS_FILE" | sed 's/^/$/' | paste -sd,)
    # echo "Variables for envsubst: $VAR_LIST" # Uncomment for debugging

    # Process each template file
    for template_file in "${!TEMPLATE_MAP[@]}"; do
        output_file="${TEMPLATE_MAP[$template_file]}"
        echo "Processing '$template_file' -> '$output_file'"

        if [ ! -f "$template_file" ]; then
            echo "Warning: Template file not found: $template_file. Skipping."
            continue
        fi

        # Add Autogenerated header to the output file
        echo "# AUTOGENERATED by apply-i3-theme.sh, DO NOT EDIT MANUALLY" >"$output_file"
        echo "# Instead, edit the template file: $template_file" >>"$output_file"

        # Use envsubst to replace only the variables defined in the theme file
        envsubst "$VAR_LIST" <"$template_file" >>"$output_file"
    done
) # End of subshell

echo "Theme '$THEME_NAME' applied successfully to files in $CONFIG_OUTPUT_DIR."
echo "Reload i3 config ($mod+Shift+c) to see changes."

# Send notification
notify-send "i3 Theme Applied" "Switched to '$THEME_NAME' theme. Reload i3."

exit 0
