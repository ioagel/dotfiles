# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind-key C-b
set -g prefix C-s
bind -r C-s send-prefix

# if-shell "[ -f ~/.terminfo/74/tmux-256color ]" \
#   "set -g default-terminal 'tmux-256color'" \
#   "set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'"
# improve colors and add support for italics
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Use emacs (readline) bindings to navigate the tmux command line (`<prefix>:`)
set -g status-keys emacs

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Use vim bindings to navigate paste mode
setw -g mode-keys vi

set -g focus-events on
set -g mouse on

# Vim integration ---------------
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on
set -g display-panes-time 350

# Dismiss current pane to background window
bind b break-pane -d
# bind C-b send-keys 'tat && exit' 'C-m'
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

bind c new-window -c "#{pane_current_path}"

bind o run-shell "open #{pane_current_path}"

# Make C-j display a selectable list of sessions
bind C-j split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Quick session switching back and forth. I never use the built in layouts
# (default mapping for Space), so I reclaimed the key for this
bind-key Space switch-client -l

# more intuitive keybindings for splitting
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Secondary binding for C-l to retain redraw
bind C-l send-keys 'C-l'

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind left resize-pane -L 5
bind right resize-pane -R 5
bind down resize-pane -D 5
bind up resize-pane -U 5

bind tab next-layout
unbind C-o
bind C-r rotate-window
bind _ select-layout even-vertical
bind | select-layout even-horizontal

bind c-t set-window-option synchronize-panes

# Easily <U>nzoom back to Vim after zooming into runner pane
# To zoom into tmux from Vim, do `<Leader>zr`
bind C-u if-shell "$is_vim" "select-pane -l" "resize-pane -Z"

# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# don't suspend-client
unbind-key C-z

# reload config
unbind r
bind r run "tmux source-file ~/.tmux.conf && tmux display-message 'Re-sourced ~/.tmux.conf'"

# remote copy - paste from local mac to remote mac through ssh
bind C-c run "tmux save-buffer - | pbcopy-remote"
bind C-v run "tmux set-buffer $(pbpaste-remote); tmux paste-buffer"

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
