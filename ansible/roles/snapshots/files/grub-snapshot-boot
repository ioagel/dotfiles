#!/usr/bin/env bash
# Enhanced grub-snapshot-boot script for snapshot boot management

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
  echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
  echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
  echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
  echo -e "${RED}[ERROR]${NC} $1" >&2
}

usage() {
  echo "Usage: $0 {update|list-boot|status} [options]"
  echo ""
  echo "Commands:"
  echo "  update           - Update GRUB configuration with current snapshots"
  echo "  list-boot        - List available snapshot boot entries"
  echo "  status           - Show grub-btrfs service status and recent snapshots"
  echo ""
  echo "This script enhances grub-btrfs functionality by providing:"
  echo "- Manual GRUB config updates when needed"
  echo "- Overview of available snapshot boot options"
  echo "- Status checking for the grub-btrfs daemon"
  echo ""
  exit 1
}

update_grub() {
  log_info "Updating GRUB configuration with latest snapshots..."

  # Check if grub-btrfsd is working
  if ! systemctl is-active --quiet grub-btrfsd.service; then
    log_warning "grub-btrfsd.service is not active"
    log_info "Starting grub-btrfsd.service..."
    sudo systemctl start grub-btrfsd.service || {
      log_error "Failed to start grub-btrfsd.service"
      exit 1
    }
  fi

  # Force update GRUB configuration
  log_info "Regenerating GRUB configuration..."
  sudo grub-mkconfig -o /boot/grub/grub.cfg

  # Also trigger grub-btrfs update
  if command -v /etc/grub.d/41_snapshots-btrfs >/dev/null 2>&1; then
    log_info "Updating grub-btrfs snapshot entries..."
    sudo /etc/grub.d/41_snapshots-btrfs
  fi

  log_success "GRUB configuration updated successfully"
  log_info "Reboot to see snapshot boot options in GRUB menu"
}

list_boot_snapshots() {
  log_info "Recent root snapshots available for booting (last 10):"
  echo ""

  if snapper -c root list >/dev/null 2>&1; then
    local snapshot_list
    snapshot_list=$(snapper -c root list 2>/dev/null)
    echo "$snapshot_list" | head -1 # header
    # Show recent snapshots (last 10)
    echo "$snapshot_list" | tail -n +2 | tail -10
    echo ""
    log_info "These recent snapshots should be available as boot options in GRUB"
    log_info "Look for 'Arch Linux snapshots' submenu in your GRUB boot menu"
    log_info "Note: Older snapshots may also be available but are not shown here"
  else
    log_error "Root snapper config not found"
    exit 1
  fi
}

show_status() {
  log_info "=== grub-btrfs Service Status ==="
  echo ""

  # Check grub-btrfsd.service
  echo -n "grub-btrfsd.service: "
  if systemctl is-active --quiet grub-btrfsd.service; then
    echo -e "${GREEN}active${NC}"
  else
    echo -e "${RED}inactive${NC}"
  fi

  # Check if grub-btrfs script exists
  echo -n "grub-btrfs script: "
  if [ -f /etc/grub.d/41_snapshots-btrfs ]; then
    echo -e "${GREEN}installed${NC}"
  else
    echo -e "${RED}missing${NC}"
  fi

  # Check /.snapshots mount
  echo -n "/.snapshots mount: "
  if mountpoint -q /.snapshots; then
    echo -e "${GREEN}mounted${NC}"
  else
    echo -e "${RED}not mounted${NC}"
  fi

  echo ""
  log_info "=== Recent Snapshots ==="
  echo ""

  if snapper -c root list >/dev/null 2>&1; then
    local snapshot_list
    snapshot_list=$(snapper -c root list 2>/dev/null)
    echo "$snapshot_list" | head -1 # header
    echo "$snapshot_list" | tail -n +2 | tail -5
  else
    log_warning "Root snapper config not available"
  fi

  echo ""
  log_info "=== GRUB Configuration Info ==="
  if [ -f /boot/grub/grub.cfg ]; then
    # Check for the actual snapshot submenu rather than script markers
    local snap_submenu
    snap_submenu=$(sudo grep -c "submenu.*snapshots" /boot/grub/grub.cfg 2>/dev/null || echo "0")

    # Also check if grub-btrfs.cfg exists and has content
    local btrfs_cfg_entries="0"
    local total_entries="0"
    if [ -f /boot/grub/grub-btrfs.cfg ]; then
      total_entries=$(sudo grep -c "menuentry" /boot/grub/grub-btrfs.cfg 2>/dev/null || echo "0")
      # Estimate unique snapshots: divide by 4 (assuming 2 kernels Ã— 2 entries each per snapshot)
      if [ "$total_entries" -gt 0 ]; then
        btrfs_cfg_entries=$((total_entries / 4))
        # Ensure at least 1 if there are any entries
        [ "$btrfs_cfg_entries" -eq 0 ] && btrfs_cfg_entries=1
      fi
    fi

    echo "Snapshot submenu in GRUB: $snap_submenu"
    echo "Estimated snapshots in grub-btrfs.cfg: $btrfs_cfg_entries (from $total_entries total entries)"

    if [ "$snap_submenu" -eq 0 ] && [ "$btrfs_cfg_entries" -eq 0 ]; then
      log_warning "No snapshot entries found in GRUB config"
      log_info "Run '$0 update' to regenerate GRUB configuration"
    else
      log_success "Snapshot boot entries are available in GRUB"
      if [ -f /boot/grub/grub-btrfs.cfg ]; then
        log_info "grub-btrfs.cfg location: /boot/grub/grub-btrfs.cfg"
      fi
    fi
  else
    log_error "GRUB configuration file not found"
  fi
}

case "${1:-}" in
update)
  update_grub
  ;;
list-boot)
  list_boot_snapshots
  ;;
status)
  show_status
  ;;
*)
  usage
  ;;
esac
