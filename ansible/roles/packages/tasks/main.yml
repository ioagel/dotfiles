---
- name: Enable Color in pacman.conf
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: "^#Color$"
    line: "Color"

- name: Enable VerbosePkgLists in pacman.conf
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: "^#VerbosePkgLists$"
    line: "VerbosePkgLists"

- name: "Uncomment multilib"
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    state: present
    line: "[multilib]"
    regexp: "^#\\[multilib\\]"
    insertafter: "^#\\[multilib\\]"

- name: "Uncomment multilib (cont)"
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    state: present
    line: "Include = /etc/pacman.d/mirrorlist"
    insertafter: "^\\[multilib\\]"
    regexp: "Include = /etc/pacman.d/mirrorlist"

- name: Add ILoveCandy to pacman.conf
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: "^#NoProgressBar$"
    line: "ILoveCandy"

- name: Disable debug packages in makepkg.conf
  ansible.builtin.lineinfile:
    path: /etc/makepkg.conf
    regexp: '^OPTIONS=\((.*) debug\b(.*)\)$'
    line: 'OPTIONS=(\1 !debug\2)'
    backrefs: true

- name: Run reflector to generate initial mirrorlist
  ansible.builtin.command:
    cmd: reflector --protocol https --latest 10 --sort rate --save /etc/pacman.d/mirrorlist
  args:
    creates: /etc/pacman.d/mirrorlist

- name: Install additional packages
  community.general.pacman:
    name: "{{ pacman_packages }}"
    state: present
    update_cache: true

- name: Detect virtualization platform
  ansible.builtin.command:
    cmd: systemd-detect-virt -v
  register: virt_platform
  changed_when: false
  failed_when: false # Don't fail on exit code 1 (expected for bare metal)

- name: Install guest utilities based on platform
  community.general.pacman:
    name: "{{ item.name }}"
    state: present
  when: virt_platform.stdout == item.when
  loop:
    - { name: virtualbox-guest-utils, when: "oracle" }
    - { name: qemu-guest-agent, when: "kvm" }
    - { name: open-vm-tools, when: "vmware" }
    - { name: hyperv, when: "microsoft" }

- name: Enable guest service based on platform
  ansible.builtin.systemd_service:
    name: "{{ item.name }}"
    daemon_reload: true
    enabled: true
  when: virt_platform.stdout == item.when
  loop:
    - { name: vboxservice.service, when: "oracle" }
    - { name: qemu-guest-agent.service, when: "kvm" }
    - { name: vmtoolsd.service, when: "vmware" }
    - { name: hv_fcopy_daemon.service, when: "microsoft" }
    - { name: hv_kvp_daemon.service, when: "microsoft" }
    - { name: hv_vss_daemon.service, when: "microsoft" }

- name: Install GPU packages for bare metal systems
  community.general.pacman:
    name: "{{ gpu_packages_baremetal }}"
    state: present
  when: virt_platform.stdout == "none"

- name: Install GPU packages for KVM virtual machines
  community.general.pacman:
    name: "{{ gpu_packages_vm_kvm }}"
    state: present
  when: virt_platform.stdout == "kvm"

- name: Install GPU packages for VirtualBox and VMware virtual machines
  community.general.pacman:
    name: "{{ gpu_packages_vm_vmware_compatible }}"
    state: present
  when: virt_platform.stdout in ["oracle", "vmware"]

- name: Ensure yay is installed (for AUR)
  become: true
  become_user: "{{ username }}"
  block:
    - name: Check if yay is installed
      ansible.builtin.command: yay --version
      register: yay_check
      ignore_errors: true
      changed_when: false
    - name: Install yay from AUR if not present
      when: yay_check.rc != 0
      changed_when: true
      retries: 3 # retry 3 times because sometimes it strangely fails
      delay: 10
      register: yay_install_result
      until: yay_install_result.rc == 0
      ansible.builtin.shell: |
        set -e
        rm -rf /tmp/yay
        cd /tmp
        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si --noconfirm

# Add 1Password GPG key import task before AUR package installation,
# otherwise 1password-cli will fail to install, only if 1password is installed by chaotic aur.
# It is strange, when I install both 1password and 1password-cli from aur, it works without
# importing the key separately.
- name: Import 1Password GPG key
  become: true
  become_user: "{{ username }}"
  ansible.builtin.shell: curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --import
  register: import_1password_key
  changed_when: "'imported' in import_1password_key.stderr"
  failed_when: false

- name: Install AUR packages
  become: true
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    name: "{{ aur_packages }}"
    use: yay
    state: present

- name: Check if Chaotic AUR GPG key is present
  command: pacman-key --list-keys 3056513887B78AEB
  register: chaotic_aur_key_check
  changed_when: false
  failed_when: false

- name: Import Chaotic AUR GPG key
  command: pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
  when: chaotic_aur_key_check.rc != 0
  changed_when: true

- name: Check if key is already locally signed
  command: pacman-key --list-sigs 3056513887B78AEB
  register: key_sig_output
  changed_when: false

- name: Sign the key if not already locally signed
  command: pacman-key --lsign-key 3056513887B78AEB
  when: key_sig_output.stdout | regex_search('^sig\s+L\s+', multiline=True) is none
  changed_when: true

- name: Download and install chaotic-keyring
  ansible.builtin.command: pacman -U --noconfirm https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst
  args:
    creates: "/usr/share/pacman/keyrings/chaotic.gpg"

- name: Download and install chaotic-mirrorlist
  ansible.builtin.command: pacman -U --noconfirm https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst
  args:
    creates: "/etc/pacman.d/chaotic-mirrorlist"

- name: Ensure Chaotic AUR repo block is present in /etc/pacman.conf
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    block: |
      [chaotic-aur]
      Include = /etc/pacman.d/chaotic-mirrorlist
    marker: "# {mark} ANSIBLE MANAGED BLOCK Chaotic AUR"
  register: chaotic_aur_repo_block

- name: Update system and sync mirrorlist (optional)
  ansible.builtin.command: pacman -Syu --noconfirm
  when: chaotic_aur_repo_block.changed

- name: Install Chaotic AUR packages
  community.general.pacman:
    name: "{{ chaotic_aur_packages }}"
    state: present

## Setup SDDM theme
- name: Copy SDDM theme
  ansible.builtin.copy:
    src: sddm/floulabs
    dest: /usr/share/sddm/themes
    owner: root
    group: root
    mode: "0755"

- name: Create SDDM config directory if it doesn't exist
  ansible.builtin.file:
    path: /etc/sddm.conf.d
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy SDDM config
  ansible.builtin.copy:
    dest: /etc/sddm.conf.d/99-default.conf
    content: |
      [General]
      Session=i3.desktop

      [Theme]
      Current=floulabs
    owner: root
    group: root
    mode: "0644"

- name: Enable and start services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    daemon_reload: true
    enabled: true
  loop: "{{ services }}"

- name: Add user to groups
  ansible.builtin.user:
    name: "{{ username }}"
    groups: "{{ user_groups }}"
    append: true
