---
- name: Create primary group
  ansible.builtin.group:
    name: "{{ username }}"
    state: present

- name: Check if zsh is available
  ansible.builtin.stat:
    path: /usr/bin/zsh
  register: zsh_available

# During install and initial setup, leave the shell as bash
# After setup, switch to zsh
- name: Create user
  ansible.builtin.user:
    name: "{{ username }}"
    group: "{{ username }}"
    groups: "{{ additional_groups }}"
    shell: "{{ '/usr/bin/zsh' if zsh_available.stat.exists else shell }}"
    comment: "{{ user_full_name }}"
    create_home: true
    password: "{{ user_password | password_hash('sha512') }}"
    state: present

- name: Set up sudoers for wheel group
  ansible.builtin.copy:
    dest: /etc/sudoers.d/10-wheel
    content: "%wheel ALL=(ALL) ALL"
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Set up passwordless sudo for user
  ansible.builtin.copy:
    dest: /etc/sudoers.d/11-{{ username }}
    content: "{{ username }} ALL=(ALL:ALL) NOPASSWD: ALL"
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Create the required directories for the user
  ansible.builtin.file:
    path: "{{ item }}"
    mode: "0755"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - "/home/{{ username }}/.config"
    - "/home/{{ username }}/.local/share"

- name: Create the required subvolumes for the user
  community.general.btrfs_subvolume:
    name: "/@home/{{ item }}"
    state: present
  loop: "{{ btrfs_home_subvolumes.values() | map(attribute='path') | list }}"

- name: Set the permissions for the required subvolumes for the user
  ansible.builtin.file:
    path: "/home/{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: "{{ username }}"
    group: "{{ username }}"
  loop: "{{ btrfs_home_subvolumes.values() }}"

# We need to install the public SSH key for the user after the subvolumes are created
# otherwise the ~/.ssh subvolume will not be created
- name: Install public SSH key for user
  ansible.posix.authorized_key:
    user: "{{ username }}"
    key: "{{ ssh_public_key }}"
    state: present
